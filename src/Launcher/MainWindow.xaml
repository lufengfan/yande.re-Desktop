<ctrlib:DropShadowWindow x:Class="Launcher.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Launcher"
        xmlns:ctrlib="clr-namespace:Launcher.Controls;assembly=Launcher.ctrlib"
        xmlns:converters="clr-namespace:Launcher.Data;assembly=Launcher.ctrlib"
        mc:Ignorable="d"
        Title="yande.re"
        AllowsTransparency="True"
        Background="Transparent"
        Height="500" Width="1000"
        MinWidth="600" MinHeight="300"
        Icon="logo/logo_small.png"
        BorderBrush="{DynamicResource {x:Static local:LauncherTheme.BorderBrushKey}}" BorderThickness="1"
        BlurRadius="{DynamicResource {x:Static local:LauncherTheme.BlurRadiusKey}}" DropShadowColor="{DynamicResource {x:Static local:LauncherTheme.DropShadowColorKey}}"
        Loaded="Window_Loaded">
    <ctrlib:DropShadowWindow.Resources>
        <RoutedUICommand x:Key="WindowMinimizeCommand" Text="Minimize"/>
        <RoutedUICommand x:Key="WindowMaximizeCommand" Text="Maximize"/>
        <RoutedUICommand x:Key="WindowNormalCommand" Text="Normal"/>
    </ctrlib:DropShadowWindow.Resources>
    <ctrlib:DropShadowWindow.Style>
        <Style TargetType="{x:Type ctrlib:DropShadowWindow}">
            <Style.Triggers>
                <Trigger Property="WindowState" Value="Maximized">
                    <Setter Property="Left" Value="0"/>
                    <Setter Property="Top" Value="0"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </ctrlib:DropShadowWindow.Style>
    <ctrlib:DropShadowWindow.CommandBindings>
        <CommandBinding Command="{StaticResource WindowMinimizeCommand}"
                CanExecute="MinimizeCommand_CanExecute"
                Executed="MinimizeCommand_Executed"/>
        <CommandBinding Command="{StaticResource WindowMaximizeCommand}"
                CanExecute="MaximizeCommand_CanExecute"
                Executed="MaximizeCommand_Executed"/>
        <CommandBinding Command="{StaticResource WindowNormalCommand}"
                Executed="NormalCommand_Executed"/>
        <CommandBinding Command="Close" Executed="CloseCommand_Executed"/>
    </ctrlib:DropShadowWindow.CommandBindings>
    <ctrlib:DropShadowWindow.WindowTitleAreaContextMenu>
        <ContextMenu>
            <ContextMenu.CommandBindings>
                <CommandBinding Command="{StaticResource WindowMinimizeCommand}"
                CanExecute="MinimizeCommand_CanExecute"
                Executed="MinimizeCommand_Executed"/>
                <CommandBinding Command="{StaticResource WindowMaximizeCommand}"
                CanExecute="MaximizeCommand_CanExecute"
                Executed="MaximizeCommand_Executed"/>
                <CommandBinding Command="{StaticResource WindowNormalCommand}"
                Executed="NormalCommand_Executed"/>
                <CommandBinding Command="Close" Executed="CloseCommand_Executed"/>
            </ContextMenu.CommandBindings>
            <MenuItem Header="还原(_R)"
                    Command="{DynamicResource WindowNormalCommand}"/>
            <MenuItem Header="移动(_M)"/>
            <MenuItem Header="大小(_S)"/>
            <MenuItem Header="最小化(_R)"
                    Command="{DynamicResource WindowMinimizeCommand}"/>
            <MenuItem Header="最大化(_R)"
                    Command="{DynamicResource WindowMaximizeCommand}"/>
            <Separator/>
            <MenuItem Header="关闭(_C)"
                    Command="ApplicationCommands.Close"/>
        </ContextMenu>
    </ctrlib:DropShadowWindow.WindowTitleAreaContextMenu>

    <Grid Background="#FF2F2F2F">
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <Grid x:Name="WindowNonclientGrid" Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Image x:Name="WindowIcon" Grid.Column="0"
                   Source="{Binding Icon, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>

            <Label x:Name="WindowTitleRect" Grid.Column="1"
                    VerticalContentAlignment="Center"
                    Foreground="Gray" FontSize="16"
                    Content="{Binding Title, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                    ctrlib:CustomizedWindow.CustomizedWindowAncestor="{Binding Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}"
                    ctrlib:CustomizedWindow.IsWindowTitleAreaPart="True"/>

            <StackPanel x:Name="WindowControlBoxPanel" Grid.Column="2"
                    Orientation="Horizontal"
                    VerticalAlignment="Top"
                    ctrlib:CustomizedWindow.CustomizedWindowAncestor="{Binding Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type ctrlib:DropShadowWindow}, Mode=FindAncestor}}"
                    ctrlib:CustomizedWindow.IsWindowTitleAreaPart="True">
                <StackPanel.Resources>
                    <Style TargetType="{x:Type Button}" x:Key="CommonControlBoxStyle">
                        <Setter Property="Width" Value="35"/>
                        <Setter Property="Height" Value="25"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Foreground" Value="LightGray"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Style.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="DarkGray"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="Background" Value="#1FFFFFFF"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="Background" Value="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type ctrlib:DropShadowWindow}, Mode=FindAncestor}}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    <ControlTemplate x:Key="WindowControlBoxControlTemplate" TargetType="{x:Type Button}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                            <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </StackPanel.Resources>

                <Button x:Name="WindowMinimizeBox"
                        Content="➖"
                        Command="{DynamicResource WindowMinimizeCommand}"
                        Style="{DynamicResource CommonControlBoxStyle}"
                        Template="{DynamicResource WindowControlBoxControlTemplate}"/>
                <Button x:Name="WindowMaximizeBox"
                        Content="➕"
                        Command="{DynamicResource WindowMaximizeCommand}" Template="{DynamicResource WindowControlBoxControlTemplate}">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource CommonControlBoxStyle}">
                            <Style.Triggers>
                                <DataTrigger
                                        Binding="{Binding WindowState, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"
                                        Value="Maximized">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button x:Name="WindowNormalBox"
                        Content="➗"
                        Command="{DynamicResource WindowNormalCommand}" Template="{DynamicResource WindowControlBoxControlTemplate}">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource CommonControlBoxStyle}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger
                                        Binding="{Binding WindowState, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"
                                        Value="Maximized">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button x:Name="WindowCloseBox"
                        Content="✖"
                        Command="ApplicationCommands.Close"
                        Style="{DynamicResource CommonControlBoxStyle}" Template="{DynamicResource WindowControlBoxControlTemplate}"/>
            </StackPanel>
        </Grid>

        <Grid x:Name="WindowClientGrid" Grid.Row="1">
            <!-- DropShadowWindow 发光颜色调节 -->
            <StackPanel Visibility="Collapsed">
                <StackPanel.Resources>
                    <Style TargetType="{x:Type Slider}">
                        <Setter Property="Maximum" Value="255"/>
                        <Setter Property="Margin" Value="20,10"/>
                    </Style>
                </StackPanel.Resources>

                <Slider x:Name="sA" Value="255" ValueChanged="Slider_ValueChanged"/>
                <Slider x:Name="sR" Value="255" ValueChanged="Slider_ValueChanged"/>
                <Slider x:Name="sG" Value="255" ValueChanged="Slider_ValueChanged"/>
                <Slider x:Name="sB" Value="255" ValueChanged="Slider_ValueChanged"/>
            </StackPanel>

            <Frame x:Name="NavigationFrame" Navigated="NavigationFrame_Navigated"/>
        </Grid>
    </Grid>
</ctrlib:DropShadowWindow>
